// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: serie.sql

package db

import (
	"context"
)

const listSeries = `-- name: listSeries :many
SELECT id, name, year, theme, color_scheme from series
`

func (q *Queries) listSeries(ctx context.Context) ([]Series, error) {
	rows, err := q.db.QueryContext(ctx, listSeries)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Series
	for rows.Next() {
		var i Series
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Year,
			&i.Theme,
			&i.ColorScheme,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
